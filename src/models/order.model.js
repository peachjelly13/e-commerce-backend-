import mongoose from "mongoose";
//this schema is when once you have made the choice you now go and make the paymet 
const orderSchema = new mongoose.Schema({
    //this means only one value for this it is not an array so we do not expect multiple values
    //during payment they will first ask you for you address where do you want the
    //product delievered ?
    shippingInfo:{
        address:{
            type:String,
            required:true
        },
        city:{
            type:String,
            required:true
        },
        state:{
            type:String,
            required:true
        },
        country:{
            type:String,
            required:true
        },
        pincode:{
            type:String,
            required:true
        },
        phoneNo:{
            type:String,
            required:true
        },
    },
    //what all items have you ordered you would be shown that , these are the items you ordered
    orderItems:[
        {
            name:{
                type:String,
                required:true
            },
            price:{
                type:Number,
                required:true
            },
            quantity:{
                type:Number,
                required:true
            },
            image:{
                type:String,
                required:true
            },
        }
    ],
    user:{
        type:mongoose.Schema.ObjectId,
        required:true
    },
    // now once you do payment using a third party tool like stripe,paypal etc 
    paymentInfo:{
        //uinque identifier for payment think of it being generated by something like
        //stripe,paypal etc
        id:{
            type:String,
            required:true
        },
        //pending , completed or in what sort of a state it tells about that 
        status:{
            type:String,
            required:true
        }
    },
    paidAt:{
        type:Date,
        required:true
    },
    totalPrice:{
        type:Number,
        required:true,
        default:0
    },
    orderStatus:{
        type:String,
        required:true,
        default:processing
    },
    deliveredAt:Date,
    shippedAt:Date,
    createdAt:{
        type:Date,
        default:Date.now
    },
});